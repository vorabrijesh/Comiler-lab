Terminals unused in grammar

   mod
   POLU


Rules useless in parser due to conflicts

   45 @7: %empty

   51 @11: %empty

   54 @13: %empty


State 32 conflicts: 7 reduce/reduce
State 45 conflicts: 7 shift/reduce, 7 reduce/reduce
State 46 conflicts: 7 shift/reduce, 7 reduce/reduce
State 47 conflicts: 7 shift/reduce, 7 reduce/reduce
State 58 conflicts: 7 shift/reduce, 7 reduce/reduce
State 64 conflicts: 7 shift/reduce, 7 reduce/reduce
State 65 conflicts: 7 shift/reduce, 7 reduce/reduce
State 78 conflicts: 7 shift/reduce, 7 reduce/reduce
State 96 conflicts: 7 shift/reduce, 7 reduce/reduce
State 97 conflicts: 7 shift/reduce, 7 reduce/reduce


Grammar

    0 $accept: Q $end

    1 Q: STM
    2  | Q STM

    3 $@1: %empty

    4 STM: cb1 $@1 A1 cb2
    5    | cb1 cb2

    6 A1: A
    7   | A1 A

    8 A: T B doll
    9  | st doll
   10  | STM

   11 @2: %empty

   12 A: @2 IEST

   13 @3: %empty

   14 A: @3 WST

   15 st: L eql EXPR

   16 EXPR: EXPR ADD TERM
   17     | EXPR SUB TERM
   18     | TERM

   19 TERM: TERM pt1 FACT
   20     | TERM DIV FACT
   21     | FACT

   22 FACT: LP EXPR RP
   23     | num
   24     | fnum
   25     | ID

   26 L: ID

   27 B: B comma D
   28  | D

   29 D: P ID K

   30 P: pt1 P
   31  | %empty

   32 K: R
   33  | eql num
   34  | eql fnum
   35  | %empty

   36 R: sq1 num sq2 R
   37  | sq1 num sq2

   38 T: INT
   39  | FLOAT
   40  | CHAR

   41 @4: %empty

   42 @5: %empty

   43 @6: %empty

   44 IEST: IF LP @4 COND RP @5 A ELSE @6 A

   45 @7: %empty

   46 @8: %empty

   47 IEST: IF LP @7 COND RP @8 A

   48 @9: %empty

   49 @10: %empty

   50 WST: WHILE LP @9 COND RP @10 A

   51 @11: %empty

   52 @12: %empty

   53 COND: @11 COND OR @12 COND

   54 @13: %empty

   55 @14: %empty

   56 COND: @13 COND AND @14 COND

   57 @15: %empty

   58 COND: NOT @15 COND
   59     | EXPR REL EXPR
   60     | EXPR
   61     | LP COND RP
   62     | True
   63     | False


Terminals, with rules where they appear

$end (0) 0
error (256)
num (258) 23 33 36 37
fnum (259) 24 34
sq1 (260) 36 37
sq2 (261) 36 37
FLOAT (262) 39
INT (263) 38
CHAR (264) 40
doll (265) 8 9
comma (266) 27
ID (267) 25 26 29
cb1 (268) 4 5
cb2 (269) 4 5
eql (270) 15 33 34
pt1 (271) 19 30
ADD (272) 16
SUB (273) 17
mod (274)
DIV (275) 20
LP (276) 22 44 47 50 61
RP (277) 22 44 47 50 61
ELSE (278) 44
IF (279) 44 47
WHILE (280) 50
REL (281) 59
AND (282) 56
OR (283) 53
NOT (284) 58
True (285) 62
False (286) 63
REDUCE (287)
POLU (288)
GOLU (289)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
Q (36)
    on left: 1 2, on right: 0 2
STM (37)
    on left: 4 5, on right: 1 2 10
$@1 (38)
    on left: 3, on right: 4
A1 (39)
    on left: 6 7, on right: 4 7
A (40)
    on left: 8 9 10 12 14, on right: 6 7 44 47 50
@2 (41)
    on left: 11, on right: 12
@3 (42)
    on left: 13, on right: 14
st (43)
    on left: 15, on right: 9
EXPR (44)
    on left: 16 17 18, on right: 15 16 17 22 59 60
TERM (45)
    on left: 19 20 21, on right: 16 17 18 19 20
FACT (46)
    on left: 22 23 24 25, on right: 19 20 21
L (47)
    on left: 26, on right: 15
B (48)
    on left: 27 28, on right: 8 27
D (49)
    on left: 29, on right: 27 28
P (50)
    on left: 30 31, on right: 29 30
K (51)
    on left: 32 33 34 35, on right: 29
R (52)
    on left: 36 37, on right: 32 36
T (53)
    on left: 38 39 40, on right: 8
IEST (54)
    on left: 44 47, on right: 12
@4 (55)
    on left: 41, on right: 44
@5 (56)
    on left: 42, on right: 44
@6 (57)
    on left: 43, on right: 44
@7 (58)
    on left: 45, on right: 47
@8 (59)
    on left: 46, on right: 47
WST (60)
    on left: 50, on right: 14
@9 (61)
    on left: 48, on right: 50
@10 (62)
    on left: 49, on right: 50
COND (63)
    on left: 53 56 58 59 60 61 62 63, on right: 44 47 50 53 56 58 61
@11 (64)
    on left: 51, on right: 53
@12 (65)
    on left: 52, on right: 53
@13 (66)
    on left: 54, on right: 56
@14 (67)
    on left: 55, on right: 56
@15 (68)
    on left: 57, on right: 58


State 0

    0 $accept: . Q $end

    cb1  shift, and go to state 1

    Q    go to state 2
    STM  go to state 3


State 1

    4 STM: cb1 . $@1 A1 cb2
    5    | cb1 . cb2

    cb2  shift, and go to state 4

    $default  reduce using rule 3 ($@1)

    $@1  go to state 5


State 2

    0 $accept: Q . $end
    2 Q: Q . STM

    $end  shift, and go to state 6
    cb1   shift, and go to state 1

    STM  go to state 7


State 3

    1 Q: STM .

    $default  reduce using rule 1 (Q)


State 4

    5 STM: cb1 cb2 .

    $default  reduce using rule 5 (STM)


State 5

    4 STM: cb1 $@1 . A1 cb2

    FLOAT  shift, and go to state 8
    INT    shift, and go to state 9
    CHAR   shift, and go to state 10
    ID     shift, and go to state 11
    cb1    shift, and go to state 1

    WHILE     reduce using rule 13 (@3)
    $default  reduce using rule 11 (@2)

    STM  go to state 12
    A1   go to state 13
    A    go to state 14
    @2   go to state 15
    @3   go to state 16
    st   go to state 17
    L    go to state 18
    T    go to state 19


State 6

    0 $accept: Q $end .

    $default  accept


State 7

    2 Q: Q STM .

    $default  reduce using rule 2 (Q)


State 8

   39 T: FLOAT .

    $default  reduce using rule 39 (T)


State 9

   38 T: INT .

    $default  reduce using rule 38 (T)


State 10

   40 T: CHAR .

    $default  reduce using rule 40 (T)


State 11

   26 L: ID .

    $default  reduce using rule 26 (L)


State 12

   10 A: STM .

    $default  reduce using rule 10 (A)


State 13

    4 STM: cb1 $@1 A1 . cb2
    7 A1: A1 . A

    FLOAT  shift, and go to state 8
    INT    shift, and go to state 9
    CHAR   shift, and go to state 10
    ID     shift, and go to state 11
    cb1    shift, and go to state 1
    cb2    shift, and go to state 20

    WHILE     reduce using rule 13 (@3)
    $default  reduce using rule 11 (@2)

    STM  go to state 12
    A    go to state 21
    @2   go to state 15
    @3   go to state 16
    st   go to state 17
    L    go to state 18
    T    go to state 19


State 14

    6 A1: A .

    $default  reduce using rule 6 (A1)


State 15

   12 A: @2 . IEST

    IF  shift, and go to state 22

    IEST  go to state 23


State 16

   14 A: @3 . WST

    WHILE  shift, and go to state 24

    WST  go to state 25


State 17

    9 A: st . doll

    doll  shift, and go to state 26


State 18

   15 st: L . eql EXPR

    eql  shift, and go to state 27


State 19

    8 A: T . B doll

    pt1  shift, and go to state 28

    $default  reduce using rule 31 (P)

    B  go to state 29
    D  go to state 30
    P  go to state 31


State 20

    4 STM: cb1 $@1 A1 cb2 .

    $default  reduce using rule 4 (STM)


State 21

    7 A1: A1 A .

    $default  reduce using rule 7 (A1)


State 22

   44 IEST: IF . LP @4 COND RP @5 A ELSE @6 A
   47     | IF . LP @7 COND RP @8 A

    LP  shift, and go to state 32


State 23

   12 A: @2 IEST .

    $default  reduce using rule 12 (A)


State 24

   50 WST: WHILE . LP @9 COND RP @10 A

    LP  shift, and go to state 33


State 25

   14 A: @3 WST .

    $default  reduce using rule 14 (A)


State 26

    9 A: st doll .

    $default  reduce using rule 9 (A)


State 27

   15 st: L eql . EXPR

    num   shift, and go to state 34
    fnum  shift, and go to state 35
    ID    shift, and go to state 36
    LP    shift, and go to state 37

    EXPR  go to state 38
    TERM  go to state 39
    FACT  go to state 40


State 28

   30 P: pt1 . P

    pt1  shift, and go to state 28

    $default  reduce using rule 31 (P)

    P  go to state 41


State 29

    8 A: T B . doll
   27 B: B . comma D

    doll   shift, and go to state 42
    comma  shift, and go to state 43


State 30

   28 B: D .

    $default  reduce using rule 28 (B)


State 31

   29 D: P . ID K

    ID  shift, and go to state 44


State 32

   44 IEST: IF LP . @4 COND RP @5 A ELSE @6 A
   47     | IF LP . @7 COND RP @8 A

    num       reduce using rule 41 (@4)
    num       [reduce using rule 45 (@7)]
    fnum      reduce using rule 41 (@4)
    fnum      [reduce using rule 45 (@7)]
    ID        reduce using rule 41 (@4)
    ID        [reduce using rule 45 (@7)]
    LP        reduce using rule 41 (@4)
    LP        [reduce using rule 45 (@7)]
    NOT       reduce using rule 41 (@4)
    NOT       [reduce using rule 45 (@7)]
    True      reduce using rule 41 (@4)
    True      [reduce using rule 45 (@7)]
    False     reduce using rule 41 (@4)
    False     [reduce using rule 45 (@7)]
    $default  reduce using rule 41 (@4)

    @4  go to state 45
    @7  go to state 46


State 33

   50 WST: WHILE LP . @9 COND RP @10 A

    $default  reduce using rule 48 (@9)

    @9  go to state 47


State 34

   23 FACT: num .

    $default  reduce using rule 23 (FACT)


State 35

   24 FACT: fnum .

    $default  reduce using rule 24 (FACT)


State 36

   25 FACT: ID .

    $default  reduce using rule 25 (FACT)


State 37

   22 FACT: LP . EXPR RP

    num   shift, and go to state 34
    fnum  shift, and go to state 35
    ID    shift, and go to state 36
    LP    shift, and go to state 37

    EXPR  go to state 48
    TERM  go to state 39
    FACT  go to state 40


State 38

   15 st: L eql EXPR .
   16 EXPR: EXPR . ADD TERM
   17     | EXPR . SUB TERM

    ADD  shift, and go to state 49
    SUB  shift, and go to state 50

    $default  reduce using rule 15 (st)


State 39

   18 EXPR: TERM .
   19 TERM: TERM . pt1 FACT
   20     | TERM . DIV FACT

    pt1  shift, and go to state 51
    DIV  shift, and go to state 52

    $default  reduce using rule 18 (EXPR)


State 40

   21 TERM: FACT .

    $default  reduce using rule 21 (TERM)


State 41

   30 P: pt1 P .

    $default  reduce using rule 30 (P)


State 42

    8 A: T B doll .

    $default  reduce using rule 8 (A)


State 43

   27 B: B comma . D

    pt1  shift, and go to state 28

    $default  reduce using rule 31 (P)

    D  go to state 53
    P  go to state 31


State 44

   29 D: P ID . K

    sq1  shift, and go to state 54
    eql  shift, and go to state 55

    $default  reduce using rule 35 (K)

    K  go to state 56
    R  go to state 57


State 45

   44 IEST: IF LP @4 . COND RP @5 A ELSE @6 A

    num    shift, and go to state 34
    fnum   shift, and go to state 35
    ID     shift, and go to state 36
    LP     shift, and go to state 58
    NOT    shift, and go to state 59
    True   shift, and go to state 60
    False  shift, and go to state 61

    num    [reduce using rule 51 (@11)]
    num    [reduce using rule 54 (@13)]
    fnum   [reduce using rule 51 (@11)]
    fnum   [reduce using rule 54 (@13)]
    ID     [reduce using rule 51 (@11)]
    ID     [reduce using rule 54 (@13)]
    LP     [reduce using rule 51 (@11)]
    LP     [reduce using rule 54 (@13)]
    NOT    [reduce using rule 51 (@11)]
    NOT    [reduce using rule 54 (@13)]
    True   [reduce using rule 51 (@11)]
    True   [reduce using rule 54 (@13)]
    False  [reduce using rule 51 (@11)]
    False  [reduce using rule 54 (@13)]

    EXPR  go to state 62
    TERM  go to state 39
    FACT  go to state 40
    COND  go to state 63
    @11   go to state 64
    @13   go to state 65


State 46

   47 IEST: IF LP @7 . COND RP @8 A

    num    shift, and go to state 34
    fnum   shift, and go to state 35
    ID     shift, and go to state 36
    LP     shift, and go to state 58
    NOT    shift, and go to state 59
    True   shift, and go to state 60
    False  shift, and go to state 61

    num    [reduce using rule 51 (@11)]
    num    [reduce using rule 54 (@13)]
    fnum   [reduce using rule 51 (@11)]
    fnum   [reduce using rule 54 (@13)]
    ID     [reduce using rule 51 (@11)]
    ID     [reduce using rule 54 (@13)]
    LP     [reduce using rule 51 (@11)]
    LP     [reduce using rule 54 (@13)]
    NOT    [reduce using rule 51 (@11)]
    NOT    [reduce using rule 54 (@13)]
    True   [reduce using rule 51 (@11)]
    True   [reduce using rule 54 (@13)]
    False  [reduce using rule 51 (@11)]
    False  [reduce using rule 54 (@13)]

    EXPR  go to state 62
    TERM  go to state 39
    FACT  go to state 40
    COND  go to state 66
    @11   go to state 64
    @13   go to state 65


State 47

   50 WST: WHILE LP @9 . COND RP @10 A

    num    shift, and go to state 34
    fnum   shift, and go to state 35
    ID     shift, and go to state 36
    LP     shift, and go to state 58
    NOT    shift, and go to state 59
    True   shift, and go to state 60
    False  shift, and go to state 61

    num    [reduce using rule 51 (@11)]
    num    [reduce using rule 54 (@13)]
    fnum   [reduce using rule 51 (@11)]
    fnum   [reduce using rule 54 (@13)]
    ID     [reduce using rule 51 (@11)]
    ID     [reduce using rule 54 (@13)]
    LP     [reduce using rule 51 (@11)]
    LP     [reduce using rule 54 (@13)]
    NOT    [reduce using rule 51 (@11)]
    NOT    [reduce using rule 54 (@13)]
    True   [reduce using rule 51 (@11)]
    True   [reduce using rule 54 (@13)]
    False  [reduce using rule 51 (@11)]
    False  [reduce using rule 54 (@13)]

    EXPR  go to state 62
    TERM  go to state 39
    FACT  go to state 40
    COND  go to state 67
    @11   go to state 64
    @13   go to state 65


State 48

   16 EXPR: EXPR . ADD TERM
   17     | EXPR . SUB TERM
   22 FACT: LP EXPR . RP

    ADD  shift, and go to state 49
    SUB  shift, and go to state 50
    RP   shift, and go to state 68


State 49

   16 EXPR: EXPR ADD . TERM

    num   shift, and go to state 34
    fnum  shift, and go to state 35
    ID    shift, and go to state 36
    LP    shift, and go to state 37

    TERM  go to state 69
    FACT  go to state 40


State 50

   17 EXPR: EXPR SUB . TERM

    num   shift, and go to state 34
    fnum  shift, and go to state 35
    ID    shift, and go to state 36
    LP    shift, and go to state 37

    TERM  go to state 70
    FACT  go to state 40


State 51

   19 TERM: TERM pt1 . FACT

    num   shift, and go to state 34
    fnum  shift, and go to state 35
    ID    shift, and go to state 36
    LP    shift, and go to state 37

    FACT  go to state 71


State 52

   20 TERM: TERM DIV . FACT

    num   shift, and go to state 34
    fnum  shift, and go to state 35
    ID    shift, and go to state 36
    LP    shift, and go to state 37

    FACT  go to state 72


State 53

   27 B: B comma D .

    $default  reduce using rule 27 (B)


State 54

   36 R: sq1 . num sq2 R
   37  | sq1 . num sq2

    num  shift, and go to state 73


State 55

   33 K: eql . num
   34  | eql . fnum

    num   shift, and go to state 74
    fnum  shift, and go to state 75


State 56

   29 D: P ID K .

    $default  reduce using rule 29 (D)


State 57

   32 K: R .

    $default  reduce using rule 32 (K)


State 58

   22 FACT: LP . EXPR RP
   61 COND: LP . COND RP

    num    shift, and go to state 34
    fnum   shift, and go to state 35
    ID     shift, and go to state 36
    LP     shift, and go to state 58
    NOT    shift, and go to state 59
    True   shift, and go to state 60
    False  shift, and go to state 61

    num    [reduce using rule 51 (@11)]
    num    [reduce using rule 54 (@13)]
    fnum   [reduce using rule 51 (@11)]
    fnum   [reduce using rule 54 (@13)]
    ID     [reduce using rule 51 (@11)]
    ID     [reduce using rule 54 (@13)]
    LP     [reduce using rule 51 (@11)]
    LP     [reduce using rule 54 (@13)]
    NOT    [reduce using rule 51 (@11)]
    NOT    [reduce using rule 54 (@13)]
    True   [reduce using rule 51 (@11)]
    True   [reduce using rule 54 (@13)]
    False  [reduce using rule 51 (@11)]
    False  [reduce using rule 54 (@13)]

    EXPR  go to state 76
    TERM  go to state 39
    FACT  go to state 40
    COND  go to state 77
    @11   go to state 64
    @13   go to state 65


State 59

   58 COND: NOT . @15 COND

    $default  reduce using rule 57 (@15)

    @15  go to state 78


State 60

   62 COND: True .

    $default  reduce using rule 62 (COND)


State 61

   63 COND: False .

    $default  reduce using rule 63 (COND)


State 62

   16 EXPR: EXPR . ADD TERM
   17     | EXPR . SUB TERM
   59 COND: EXPR . REL EXPR
   60     | EXPR .

    ADD  shift, and go to state 49
    SUB  shift, and go to state 50
    REL  shift, and go to state 79

    $default  reduce using rule 60 (COND)


State 63

   44 IEST: IF LP @4 COND . RP @5 A ELSE @6 A

    RP  shift, and go to state 80


State 64

   53 COND: @11 . COND OR @12 COND

    num    shift, and go to state 34
    fnum   shift, and go to state 35
    ID     shift, and go to state 36
    LP     shift, and go to state 58
    NOT    shift, and go to state 59
    True   shift, and go to state 60
    False  shift, and go to state 61

    num    [reduce using rule 51 (@11)]
    num    [reduce using rule 54 (@13)]
    fnum   [reduce using rule 51 (@11)]
    fnum   [reduce using rule 54 (@13)]
    ID     [reduce using rule 51 (@11)]
    ID     [reduce using rule 54 (@13)]
    LP     [reduce using rule 51 (@11)]
    LP     [reduce using rule 54 (@13)]
    NOT    [reduce using rule 51 (@11)]
    NOT    [reduce using rule 54 (@13)]
    True   [reduce using rule 51 (@11)]
    True   [reduce using rule 54 (@13)]
    False  [reduce using rule 51 (@11)]
    False  [reduce using rule 54 (@13)]

    EXPR  go to state 62
    TERM  go to state 39
    FACT  go to state 40
    COND  go to state 81
    @11   go to state 64
    @13   go to state 65


State 65

   56 COND: @13 . COND AND @14 COND

    num    shift, and go to state 34
    fnum   shift, and go to state 35
    ID     shift, and go to state 36
    LP     shift, and go to state 58
    NOT    shift, and go to state 59
    True   shift, and go to state 60
    False  shift, and go to state 61

    num    [reduce using rule 51 (@11)]
    num    [reduce using rule 54 (@13)]
    fnum   [reduce using rule 51 (@11)]
    fnum   [reduce using rule 54 (@13)]
    ID     [reduce using rule 51 (@11)]
    ID     [reduce using rule 54 (@13)]
    LP     [reduce using rule 51 (@11)]
    LP     [reduce using rule 54 (@13)]
    NOT    [reduce using rule 51 (@11)]
    NOT    [reduce using rule 54 (@13)]
    True   [reduce using rule 51 (@11)]
    True   [reduce using rule 54 (@13)]
    False  [reduce using rule 51 (@11)]
    False  [reduce using rule 54 (@13)]

    EXPR  go to state 62
    TERM  go to state 39
    FACT  go to state 40
    COND  go to state 82
    @11   go to state 64
    @13   go to state 65


State 66

   47 IEST: IF LP @7 COND . RP @8 A

    RP  shift, and go to state 83


State 67

   50 WST: WHILE LP @9 COND . RP @10 A

    RP  shift, and go to state 84


State 68

   22 FACT: LP EXPR RP .

    $default  reduce using rule 22 (FACT)


State 69

   16 EXPR: EXPR ADD TERM .
   19 TERM: TERM . pt1 FACT
   20     | TERM . DIV FACT

    pt1  shift, and go to state 51
    DIV  shift, and go to state 52

    $default  reduce using rule 16 (EXPR)


State 70

   17 EXPR: EXPR SUB TERM .
   19 TERM: TERM . pt1 FACT
   20     | TERM . DIV FACT

    pt1  shift, and go to state 51
    DIV  shift, and go to state 52

    $default  reduce using rule 17 (EXPR)


State 71

   19 TERM: TERM pt1 FACT .

    $default  reduce using rule 19 (TERM)


State 72

   20 TERM: TERM DIV FACT .

    $default  reduce using rule 20 (TERM)


State 73

   36 R: sq1 num . sq2 R
   37  | sq1 num . sq2

    sq2  shift, and go to state 85


State 74

   33 K: eql num .

    $default  reduce using rule 33 (K)


State 75

   34 K: eql fnum .

    $default  reduce using rule 34 (K)


State 76

   16 EXPR: EXPR . ADD TERM
   17     | EXPR . SUB TERM
   22 FACT: LP EXPR . RP
   59 COND: EXPR . REL EXPR
   60     | EXPR .

    ADD  shift, and go to state 49
    SUB  shift, and go to state 50
    RP   shift, and go to state 68
    REL  shift, and go to state 79


State 77

   61 COND: LP COND . RP

    RP  shift, and go to state 86


State 78

   58 COND: NOT @15 . COND

    num    shift, and go to state 34
    fnum   shift, and go to state 35
    ID     shift, and go to state 36
    LP     shift, and go to state 58
    NOT    shift, and go to state 59
    True   shift, and go to state 60
    False  shift, and go to state 61

    num    [reduce using rule 51 (@11)]
    num    [reduce using rule 54 (@13)]
    fnum   [reduce using rule 51 (@11)]
    fnum   [reduce using rule 54 (@13)]
    ID     [reduce using rule 51 (@11)]
    ID     [reduce using rule 54 (@13)]
    LP     [reduce using rule 51 (@11)]
    LP     [reduce using rule 54 (@13)]
    NOT    [reduce using rule 51 (@11)]
    NOT    [reduce using rule 54 (@13)]
    True   [reduce using rule 51 (@11)]
    True   [reduce using rule 54 (@13)]
    False  [reduce using rule 51 (@11)]
    False  [reduce using rule 54 (@13)]

    EXPR  go to state 62
    TERM  go to state 39
    FACT  go to state 40
    COND  go to state 87
    @11   go to state 64
    @13   go to state 65


State 79

   59 COND: EXPR REL . EXPR

    num   shift, and go to state 34
    fnum  shift, and go to state 35
    ID    shift, and go to state 36
    LP    shift, and go to state 37

    EXPR  go to state 88
    TERM  go to state 39
    FACT  go to state 40


State 80

   44 IEST: IF LP @4 COND RP . @5 A ELSE @6 A

    $default  reduce using rule 42 (@5)

    @5  go to state 89


State 81

   53 COND: @11 COND . OR @12 COND

    OR  shift, and go to state 90


State 82

   56 COND: @13 COND . AND @14 COND

    AND  shift, and go to state 91


State 83

   47 IEST: IF LP @7 COND RP . @8 A

    $default  reduce using rule 46 (@8)

    @8  go to state 92


State 84

   50 WST: WHILE LP @9 COND RP . @10 A

    $default  reduce using rule 49 (@10)

    @10  go to state 93


State 85

   36 R: sq1 num sq2 . R
   37  | sq1 num sq2 .

    sq1  shift, and go to state 54

    $default  reduce using rule 37 (R)

    R  go to state 94


State 86

   61 COND: LP COND RP .

    $default  reduce using rule 61 (COND)


State 87

   58 COND: NOT @15 COND .

    $default  reduce using rule 58 (COND)


State 88

   16 EXPR: EXPR . ADD TERM
   17     | EXPR . SUB TERM
   59 COND: EXPR REL EXPR .

    ADD  shift, and go to state 49
    SUB  shift, and go to state 50

    $default  reduce using rule 59 (COND)


State 89

   44 IEST: IF LP @4 COND RP @5 . A ELSE @6 A

    FLOAT  shift, and go to state 8
    INT    shift, and go to state 9
    CHAR   shift, and go to state 10
    ID     shift, and go to state 11
    cb1    shift, and go to state 1

    WHILE     reduce using rule 13 (@3)
    $default  reduce using rule 11 (@2)

    STM  go to state 12
    A    go to state 95
    @2   go to state 15
    @3   go to state 16
    st   go to state 17
    L    go to state 18
    T    go to state 19


State 90

   53 COND: @11 COND OR . @12 COND

    $default  reduce using rule 52 (@12)

    @12  go to state 96


State 91

   56 COND: @13 COND AND . @14 COND

    $default  reduce using rule 55 (@14)

    @14  go to state 97


State 92

   47 IEST: IF LP @7 COND RP @8 . A

    FLOAT  shift, and go to state 8
    INT    shift, and go to state 9
    CHAR   shift, and go to state 10
    ID     shift, and go to state 11
    cb1    shift, and go to state 1

    WHILE     reduce using rule 13 (@3)
    $default  reduce using rule 11 (@2)

    STM  go to state 12
    A    go to state 98
    @2   go to state 15
    @3   go to state 16
    st   go to state 17
    L    go to state 18
    T    go to state 19


State 93

   50 WST: WHILE LP @9 COND RP @10 . A

    FLOAT  shift, and go to state 8
    INT    shift, and go to state 9
    CHAR   shift, and go to state 10
    ID     shift, and go to state 11
    cb1    shift, and go to state 1

    WHILE     reduce using rule 13 (@3)
    $default  reduce using rule 11 (@2)

    STM  go to state 12
    A    go to state 99
    @2   go to state 15
    @3   go to state 16
    st   go to state 17
    L    go to state 18
    T    go to state 19


State 94

   36 R: sq1 num sq2 R .

    $default  reduce using rule 36 (R)


State 95

   44 IEST: IF LP @4 COND RP @5 A . ELSE @6 A

    ELSE  shift, and go to state 100


State 96

   53 COND: @11 COND OR @12 . COND

    num    shift, and go to state 34
    fnum   shift, and go to state 35
    ID     shift, and go to state 36
    LP     shift, and go to state 58
    NOT    shift, and go to state 59
    True   shift, and go to state 60
    False  shift, and go to state 61

    num    [reduce using rule 51 (@11)]
    num    [reduce using rule 54 (@13)]
    fnum   [reduce using rule 51 (@11)]
    fnum   [reduce using rule 54 (@13)]
    ID     [reduce using rule 51 (@11)]
    ID     [reduce using rule 54 (@13)]
    LP     [reduce using rule 51 (@11)]
    LP     [reduce using rule 54 (@13)]
    NOT    [reduce using rule 51 (@11)]
    NOT    [reduce using rule 54 (@13)]
    True   [reduce using rule 51 (@11)]
    True   [reduce using rule 54 (@13)]
    False  [reduce using rule 51 (@11)]
    False  [reduce using rule 54 (@13)]

    EXPR  go to state 62
    TERM  go to state 39
    FACT  go to state 40
    COND  go to state 101
    @11   go to state 64
    @13   go to state 65


State 97

   56 COND: @13 COND AND @14 . COND

    num    shift, and go to state 34
    fnum   shift, and go to state 35
    ID     shift, and go to state 36
    LP     shift, and go to state 58
    NOT    shift, and go to state 59
    True   shift, and go to state 60
    False  shift, and go to state 61

    num    [reduce using rule 51 (@11)]
    num    [reduce using rule 54 (@13)]
    fnum   [reduce using rule 51 (@11)]
    fnum   [reduce using rule 54 (@13)]
    ID     [reduce using rule 51 (@11)]
    ID     [reduce using rule 54 (@13)]
    LP     [reduce using rule 51 (@11)]
    LP     [reduce using rule 54 (@13)]
    NOT    [reduce using rule 51 (@11)]
    NOT    [reduce using rule 54 (@13)]
    True   [reduce using rule 51 (@11)]
    True   [reduce using rule 54 (@13)]
    False  [reduce using rule 51 (@11)]
    False  [reduce using rule 54 (@13)]

    EXPR  go to state 62
    TERM  go to state 39
    FACT  go to state 40
    COND  go to state 102
    @11   go to state 64
    @13   go to state 65


State 98

   47 IEST: IF LP @7 COND RP @8 A .

    $default  reduce using rule 47 (IEST)


State 99

   50 WST: WHILE LP @9 COND RP @10 A .

    $default  reduce using rule 50 (WST)


State 100

   44 IEST: IF LP @4 COND RP @5 A ELSE . @6 A

    $default  reduce using rule 43 (@6)

    @6  go to state 103


State 101

   53 COND: @11 COND OR @12 COND .

    $default  reduce using rule 53 (COND)


State 102

   56 COND: @13 COND AND @14 COND .

    $default  reduce using rule 56 (COND)


State 103

   44 IEST: IF LP @4 COND RP @5 A ELSE @6 . A

    FLOAT  shift, and go to state 8
    INT    shift, and go to state 9
    CHAR   shift, and go to state 10
    ID     shift, and go to state 11
    cb1    shift, and go to state 1

    WHILE     reduce using rule 13 (@3)
    $default  reduce using rule 11 (@2)

    STM  go to state 12
    A    go to state 104
    @2   go to state 15
    @3   go to state 16
    st   go to state 17
    L    go to state 18
    T    go to state 19


State 104

   44 IEST: IF LP @4 COND RP @5 A ELSE @6 A .

    $default  reduce using rule 44 (IEST)
